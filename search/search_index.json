{"config":{"lang":["pt"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"In\u00edcio","text":"<p>Documenta\u00e7\u00e3o do pacote <code>animaivos</code>.</p> <p>Este pacote foi criado como trabalho final para disciplina de Introdu\u00e7\u00e3o a Programa\u00e7\u00e3o do  Curso T\u00e9cnico Integrado em Inform\u00e1tica, ano de 2024, do IFRN campus Parnamirim.</p>"},{"location":"#tarefa","title":"Tarefa","text":"<p>Fa\u00e7a uma anima\u00e7\u00e3o que atenda aos seguintes requisitos:</p> <ol> <li>Ter 4 cenas com fundos distintos e que tenham obst\u00e1culos</li> <li>Ter 2 ou mais personagens por cenas</li> <li>Cada cena dever\u00e1 ser implementada em uma fun\u00e7\u00e3o com nome mnem\u00f4nico</li> <li>A anima\u00e7\u00e3o dever\u00e1 ser feita no m\u00f3dulo <code>turtle</code> do Python</li> <li> <p>Pelo menos uma das cenas deve contemplar:</p> <ol> <li>Repeti\u00e7\u00e3o 3 ou mais vezes com la\u00e7o <code>while</code></li> <li>Condi\u00e7\u00e3o com <code>if</code>/<code>elif</code>/<code>else</code></li> <li>Seguir instru\u00e7\u00f5es de um arquivo de texto</li> <li>Ter di\u00e1logo com 10 falas</li> </ol> </li> </ol>"},{"location":"#lista-de-tarefas","title":"Lista de tarefas","text":"<p>Estude a cena de demonstra\u00e7\u00e3o implementada na fun\u00e7\u00e3o cena_demo().</p>"},{"location":"#tarefas-para-cena-1","title":"Tarefas para Cena 1","text":"<ul> <li> Renomeie a fun\u00e7\u00e3o cena1() seguindo as instru\u00e7\u00f5es do coment\u00e1rio na linha imediatamente acima da defini\u00e7\u00e3o da fun\u00e7\u00e3o</li> <li> Altere a docstring da fun\u00e7\u00e3o cena1(), descrevendo, de maneira sucinta, o que faz a cena</li> <li> Pesquise<sup>1</sup> por ou edite<sup>2</sup> uma imagem de plano de fundo para a cena e salve-a no diret\u00f3rio <code>animaivos/fundos/</code></li> <li> Pesquise por imagens<sup>3</sup> para os personagens da cena e salve-as no diret\u00f3rio <code>animaivos/personagens/</code></li> </ul> <p>Copie o modelo Tarefas para Cena 1 para Cena 2, Cena 3 e Cena 4.</p> <ol> <li> <p>Como exemplo, pesquise no Google Imagens por: Mario Bros 2d scenery.\u00a0\u21a9</p> </li> <li> <p>Alguns estudantes tem utilizado o aplicativo Piskel para cria\u00e7\u00e3o de imagens de plano de fundo.\u00a0\u21a9</p> </li> <li> <p>Desenho de animais de 32, 72, 128 e 512 pixels podem ser encontrados em https://github.com/jurandysoares/manima/tree/main/manima/images/animal.\u00a0\u21a9</p> </li> </ol>"},{"location":"referencia/","title":"Refer\u00eancia","text":""},{"location":"animaivos/","title":"pacote","text":"<p>Habilita o clique do mouse na tela.</p> Source code in <code>animaivos/nucleo.py</code> <pre><code>def habilita_clique() -&gt; None:\n    \"\"\"Habilita o clique do mouse na tela.\n    \"\"\"\n\n    tela = turtle.Screen()\n    tela.title(\"Clique para ver as coordenadas do mouse\")\n    tela.onclick(exibir_coordenadas)\n</code></pre>"},{"location":"animaivos/menus/","title":"menus","text":"<p>M\u00f3dulo criado para guardar os menus de sua anima\u00e7\u00e3o.</p> <p>Encontra-se no arquivo <code>animaivos/menus.py</code>.</p> <p>Menus do pacote animaivos.</p> <p>Como demonstra\u00e7\u00e3o, ele possui o seguinte conte\u00fado:</p> <pre><code>menu_principal = \"\"\"\\\n\n    Anima\u00e7\u00e3o de Fulano, Beltrano e Sicrano\n    ======================================\n\n    Listagem de cenas:\n\n       1. Cena 1\n       2. Cena 2\n       3. Cena 3\n       4. Cena 4\n       5. Sair\n\n    Escolha sua op\u00e7\u00e3o: \"\"\"\n</code></pre>"},{"location":"animaivos/nucleo/","title":"nucleo","text":"<p>N\u00facleo do pacote animaivos. \u00c9 composto das seguintes fun\u00e7\u00f5es:</p> <ul> <li>carrega_personagens</li> <li>fala</li> <li>carrega_img_fundo</li> <li>exibir_coordenadas</li> <li>habilita_clique</li> </ul>"},{"location":"animaivos/nucleo/carrega_img_fundo/","title":"animaivos.nucleo.carrega_img_fundo()","text":"<p>Carrega uma imagem de fundo para a tela.</p> <p>Carrega uma imagem de fundo para a tela, que \u00e9 um arquivo <code>.gif</code> ou um arquivo <code>.png</code> presente no diret\u00f3rio <code>animaivos/fundos/</code>.</p> <p>Parameters:</p> Name Type Description Default <code>img_fundo</code> <code>str</code> <p>Imagem de plano de fundo que ser\u00e1 carregada.</p> required Source code in <code>animaivos/nucleo.py</code> <pre><code>def carrega_img_fundo(img_fundo: str):\n    \"\"\"Carrega uma imagem de fundo para a tela.\n\n    Carrega uma imagem de fundo para a tela, que \u00e9 um arquivo `.gif`\n    ou um arquivo `.png` presente no diret\u00f3rio `animaivos/fundos/`.\n\n    Args:\n        img_fundo (str): Imagem de plano de fundo que ser\u00e1 carregada.\n    \"\"\"\n\n    cam_img_fundo = Path(__file__).parent / \"fundos\" / img_fundo\n\n    if cam_img_fundo.exists() and cam_img_fundo.is_file():\n        turtle.bgpic(cam_img_fundo.as_posix())\n    else:\n        print(cam_img_fundo.as_posix())\n        print('Imagem de fundo n\u00e3o encontrada!')\n</code></pre>"},{"location":"animaivos/nucleo/carrega_personagens/","title":"animaivos.nucleo.carrega_personagens()","text":"<p>Carrega os personagens da anima\u00e7\u00e3o.</p> <p>Carrega os personagens da anima\u00e7\u00e3o, que s\u00e3o arquivos <code>.gif</code> presentes no diret\u00f3rio <code>animaivos/personagens/</code>.</p> Source code in <code>animaivos/nucleo.py</code> <pre><code>def carrega_personagens():\n    \"\"\"Carrega os personagens da anima\u00e7\u00e3o.\n\n    Carrega os personagens da anima\u00e7\u00e3o, que s\u00e3o arquivos `.gif`\n    presentes no diret\u00f3rio `animaivos/personagens/`.\n    \"\"\"\n\n    cam_personagens = Path(__file__).parent / \"personagens\"\n    cam_atual = Path.cwd()\n\n    os.chdir(cam_personagens.as_posix())\n    for img in glob(\"*.gif\"):\n        turtle.register_shape(img)\n\n    os.chdir(cam_atual.as_posix())\n</code></pre>"},{"location":"animaivos/nucleo/exibir_coordenadas/","title":"animaivos.nucleo.exibir_coordenadas()","text":"<p>Fun\u00e7\u00e3o utilizada para exibir as coordenadas quando o usu\u00e1rio clicar com o mouse em determinada posi\u00e7\u00e3o da janela criada pelo m\u00f3dulo <code>turtle</code>. Esta fun\u00e7\u00e3o \u00e9 chamada quando voc\u00ea utilizar a fun\u00e7\u00e3o habilita_clique().</p> <p>Exibe as coordenadas de um clique do mouse.</p> <p>Parameters:</p> Name Type Description Default <code>x</code> <code>float</code> <p>Coordenada <code>x</code> do clique do mouse.</p> required <code>y</code> <code>float</code> <p>Coordenada <code>y</code> do clique do mouse.</p> required Source code in <code>animaivos/nucleo.py</code> <pre><code>def exibir_coordenadas(x: float, y: float) -&gt; None:\n    \"\"\"Exibe as coordenadas de um clique do mouse.\n\n    Args:\n        x (float): Coordenada `x` do clique do mouse.\n        y (float): Coordenada `y` do clique do mouse.\n    \"\"\"\n\n    print(f\"Coordenadas do clique: x={x:0.0f}, y={y:0.0f}\")\n\n    # Exibe as coordenadas na tela com o turtle\n    turtle.penup()\n    turtle.goto(x, y)\n    turtle.pendown()\n    turtle.write(f\"x={x:0.0f}, y={y:0.0f}\", align=\"center\")\n    turtle.stamp()\n</code></pre>"},{"location":"animaivos/nucleo/fala/","title":"animaivos.nucleo.fala()","text":"<p>Exibe um bal\u00e3o de fala para um personagem.</p> <p>Exibe um bal\u00e3o de fala para um personagem, com o texto passado como par\u00e2metro, em um \u00e2ngulo e dist\u00e2ncia espec\u00edficos.</p> <p>Parameters:</p> Name Type Description Default <code>personagem</code> <code>Turtle</code> <p>Um objeto da classe <code>turtle.Turtle</code> que representa um personagem.</p> required <code>texto</code> <code>str</code> <p>O texto que ser\u00e1 exibido no bal\u00e3o de fala.</p> required <code>angulo</code> <code>int</code> <p>O \u00e2ngulo em graus no sentido em que ser\u00e1 desenhada uma linha. Valor padr\u00e3o: 45.</p> <code>45</code> <code>distancia</code> <code>int</code> <p>Dist\u00e2ncia em pixels na qual ser\u00e1 desenhada a linha. Valor padr\u00e3o: 150.</p> <code>150</code> <code>tempo</code> <code>float</code> <p>Tempo de exibi\u00e7\u00e3o do texto. Valor padr\u00e3o: 5.</p> <code>5</code> Source code in <code>animaivos/nucleo.py</code> <pre><code>def fala(personagem: turtle.Turtle, \n         texto: str, \n         angulo: int = 45, \n         distancia: int = 150,\n         tempo: float = 5):\n    \"\"\"Exibe um bal\u00e3o de fala para um personagem.\n\n    Exibe um bal\u00e3o de fala para um personagem, com o texto\n    passado como par\u00e2metro, em um \u00e2ngulo e dist\u00e2ncia espec\u00edficos.\n\n    Args:\n        personagem (turtle.Turtle): Um objeto da classe `turtle.Turtle` que representa um personagem.\n        texto (str): O texto que ser\u00e1 exibido no bal\u00e3o de fala.\n        angulo (int, optional): O \u00e2ngulo em graus no sentido em que ser\u00e1 desenhada uma linha. Valor padr\u00e3o: 45.\n        distancia (int, optional): Dist\u00e2ncia em pixels na qual ser\u00e1 desenhada a linha. Valor padr\u00e3o: 150.\n        tempo (float, optional): Tempo de exibi\u00e7\u00e3o do texto. Valor padr\u00e3o: 5.\n    \"\"\"\n\n    x,y = personagem.pos()\n    balao.up()\n    balao.goto(x, y)\n    balao.down()\n    balao.left(angulo)\n    balao.forward(distancia)\n    balao.write(texto)\n    time.sleep(tempo)\n    balao.undo()\n    balao.undo()\n    balao.undo()\n</code></pre>"},{"location":"animaivos/nucleo/habilita_clique/","title":"animaivos.nucleo.habilita_clique()","text":"<p>Habilita o clique do mouse na tela.</p> Source code in <code>animaivos/nucleo.py</code> <pre><code>def habilita_clique() -&gt; None:\n    \"\"\"Habilita o clique do mouse na tela.\n    \"\"\"\n\n    tela = turtle.Screen()\n    tela.title(\"Clique para ver as coordenadas do mouse\")\n    tela.onclick(exibir_coordenadas)\n</code></pre>"},{"location":"main/","title":"main","text":"<p>O m\u00f3dulo <code>main</code>, cujo c\u00f3digo fonte encontra-se no arquivo <code>main.py</code>, deve ser editado por voc\u00ea e pelos eventuais membros de seu grupo. Ele est\u00e1 dividido em 6 fun\u00e7\u00f5es, a saber:</p> <ul> <li>main.main():</li> <li>main.cena_demo():</li> <li>main.cena1():</li> <li>main.cena2():</li> <li>main.cena3():</li> <li>main.cena4():</li> </ul>"},{"location":"main/cena1/","title":"main.cena1()","text":"<p>Descri\u00e7\u00e3o da cena 1</p> Source code in <code>main.py</code> <pre><code>def cena1():\n    \"\"\"\n    Descri\u00e7\u00e3o da cena 1\n    \"\"\"\n    pass\n</code></pre>"},{"location":"main/cena2/","title":"main.cena2()","text":"<p>Descri\u00e7\u00e3o da cena 2</p> Source code in <code>main.py</code> <pre><code>def cena2():\n    \"\"\"\n    Descri\u00e7\u00e3o da cena 2\n    \"\"\"    \n    pass\n</code></pre>"},{"location":"main/cena3/","title":"main.cena3()","text":"<p>Descri\u00e7\u00e3o da cena 3</p> Source code in <code>main.py</code> <pre><code>def cena3():\n    \"\"\"\n    Descri\u00e7\u00e3o da cena 3\n    \"\"\"    \n    pass\n</code></pre>"},{"location":"main/cena4/","title":"main.cena4()","text":"<p>Descri\u00e7\u00e3o da cena 4</p> Source code in <code>main.py</code> <pre><code>def cena4():\n    \"\"\"\n    Descri\u00e7\u00e3o da cena 4\n    \"\"\"    \n    pass\n</code></pre>"},{"location":"main/cena_demo/","title":"main.cena_demo()","text":"<p>Cena de demonstra\u00e7\u00e3o que exibe um gato  e um rato  falando.</p> <p>Cena de demonstra\u00e7\u00e3o.</p> Source code in <code>main.py</code> <pre><code>def cena_demo():\n    \"\"\"Cena de demonstra\u00e7\u00e3o.\"\"\"\n\n    LARG=1110\n    ALT=694\n    MEIA_LARG=(LARG//2)\n    MEIA_ALT=(ALT//2)\n    turtle.setup(1110, 694)\n\n    carrega_img_fundo(\"fundo-com-degraus.png\")\n\n    # O gato ser\u00e1 visto em todo o programa\n    global gato\n    global rato\n\n    gato = turtle.Turtle(shape=\"_cat.gif\")\n    gato.up()\n    fala(gato, \"Ol\u00e1!\")\n    fala(gato, \"Estou no centro da imagem.\")\n    gato.goto(-MEIA_LARG, 0)\n    gato.shape(\"cat_.gif\")\n    gato.goto(0, 0)\n\n    rato = turtle.Turtle(shape=\"mouse_.gif\")\n    rato.up()\n    fala(rato, \"Ol\u00e1!\")\n    fala(rato, \"Estou no centro da imagem.\")\n    rato.goto(+MEIA_LARG, 0)\n    rato.shape(\"_mouse.gif\")\n    rato.goto(0, 0)\n</code></pre>"},{"location":"main/main/","title":"main.main()","text":"Source code in <code>main.py</code> <pre><code>def main():\n    carrega_personagens()    \n    print(\"Os seguintes personagens foram carregados:\")\n    formas_gif = [forma for forma in turtle.getshapes() if forma.endswith('.gif')]\n    print('\\n'.join(formas_gif))\n\n    op = int(input(menu_principal))\n    while op != 5:\n        if op == 1:\n            cena1()\n        elif op == 2:\n            cena2()\n        elif op == 3:\n            cena3()\n        elif op == 4:\n            cena4()\n        else:\n            print(\"Op\u00e7\u00e3o inv\u00e1lida.\")\n\n        op = int(input(menu_principal))\n</code></pre> <p>Esta \u00e9 a fun\u00e7\u00e3o principal de sua anima\u00e7\u00e3o.</p> <p>O prop\u00f3sito dela \u00e9 oferecer um la\u00e7o no qual o usu\u00e1rio possa escolher qual cena ele deseja ver.</p> <p>Altere a fun\u00e7\u00e3o de acordo com necessidade de seu grupo.</p> <p>O ideal \u00e9 que voc\u00ea reescreva esta fun\u00e7\u00e3o do zero.</p>"}]}